"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
function WrapStyle(message, wrapper, style, removeResetColorCode) {
    if (removeResetColorCode === void 0) { removeResetColorCode = false; }
    return handleStyle("" + (wrapper && wrapper[0] ? wrapper[0] : '') + message + (wrapper && wrapper[1] ? wrapper[1] : ''), style, removeResetColorCode);
}
exports.WrapStyle = WrapStyle;
function handleStyle(msg, style, removeResetColorCode) {
    if (style) {
        if (removeResetColorCode) {
            return "" + style + msg;
        }
        return getANSICode('reset', "" + style + msg);
    }
    return msg;
}
function getNodeStyle(style) {
    if (typeof style === 'string') {
        return {
            color: getANSICode('color', utils_1.stringColorToAnsiColor(style)),
            background: '',
            bold: ''
        };
    }
    else {
        return {
            bold: style['font-weight'] === 'bold' ? getANSICode('bold') : '',
            color: getANSICode('color', utils_1.stringColorToAnsiColor(style.color)),
            background: getANSICode('background', utils_1.stringColorToAnsiColor(style.background))
        };
    }
}
exports.getNodeStyle = getNodeStyle;
function getANSICode(type, color) {
    switch (type) {
        case 'color':
            return color !== undefined ? "\u001B[38;" + color + "m" : '';
        case 'background':
            return color !== undefined ? "\u001B[48;" + color + "m" : '';
        case 'bold':
            return "\u001B[1m";
        case 'reset':
            return color !== undefined ? color + "\u001B[0m" : '';
    }
}
function createBrowserStyle(style) {
    if (typeof style === 'string') {
        return "color: " + style + ";";
    }
    else {
        var res = '';
        for (var key in style) {
            if (style.hasOwnProperty(key)) {
                res += key + ": " + style[key] + ";";
            }
        }
        return res;
    }
}
exports.createBrowserStyle = createBrowserStyle;
